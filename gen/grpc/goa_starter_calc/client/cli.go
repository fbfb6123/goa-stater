// Code generated by goa v3.4.3, DO NOT EDIT.
//
// goa_starter-calc gRPC client CLI support package
//
// Command:
// $ goa gen goa_starter/design

package client

import (
	"encoding/json"
	"fmt"
	goastartercalc "goa_starter/gen/goa_starter_calc"
	goa_starter_calcpb "goa_starter/gen/grpc/goa_starter_calc/pb"
)

// BuildAddPayload builds the payload for the goa_starter-calc add endpoint
// from CLI flags.
func BuildAddPayload(goaStarterCalcAddMessage string) (*goastartercalc.AddPayload, error) {
	var err error
	var message goa_starter_calcpb.AddRequest
	{
		if goaStarterCalcAddMessage != "" {
			err = json.Unmarshal([]byte(goaStarterCalcAddMessage), &message)
			if err != nil {
				return nil, fmt.Errorf("invalid JSON for message, \nerror: %s, \nexample of valid JSON:\n%s", err, "'{\n      \"c\": 8428770013074316282,\n      \"d\": 7396536983462351961\n   }'")
			}
		}
	}
	v := &goastartercalc.AddPayload{
		C: int(message.C),
		D: int(message.D),
	}

	return v, nil
}
