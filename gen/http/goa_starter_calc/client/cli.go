// Code generated by goa v3.4.3, DO NOT EDIT.
//
// goa_starter-calc HTTP client CLI support package
//
// Command:
// $ goa gen goa_starter/design

package client

import (
	"fmt"
	goastartercalc "goa_starter/gen/goa_starter_calc"
	"strconv"
)

// BuildAddPayload builds the payload for the goa_starter-calc add endpoint
// from CLI flags.
func BuildAddPayload(goaStarterCalcAddC2 string, goaStarterCalcAddD string) (*goastartercalc.AddPayload, error) {
	var err error
	var c2 int
	{
		var v int64
		v, err = strconv.ParseInt(goaStarterCalcAddC2, 10, 64)
		c2 = int(v)
		if err != nil {
			return nil, fmt.Errorf("invalid value for c2, must be INT")
		}
	}
	var d int
	{
		var v int64
		v, err = strconv.ParseInt(goaStarterCalcAddD, 10, 64)
		d = int(v)
		if err != nil {
			return nil, fmt.Errorf("invalid value for d, must be INT")
		}
	}
	v := &goastartercalc.AddPayload{}
	v.C = c2
	v.D = d

	return v, nil
}
