// Code generated by goa v3.4.3, DO NOT EDIT.
//
// goa_starter HTTP client CLI support package
//
// Command:
// $ goa gen goa_starter/design

package client

import (
	"fmt"
	goastarter "goa_starter/gen/goa_starter"
	"strconv"
)

// BuildAddPayload builds the payload for the goa_starter add endpoint from CLI
// flags.
func BuildAddPayload(goaStarterAddA string, goaStarterAddB string) (*goastarter.AddPayload, error) {
	var err error
	var a int
	{
		var v int64
		v, err = strconv.ParseInt(goaStarterAddA, 10, 64)
		a = int(v)
		if err != nil {
			return nil, fmt.Errorf("invalid value for a, must be INT")
		}
	}
	var b int
	{
		var v int64
		v, err = strconv.ParseInt(goaStarterAddB, 10, 64)
		b = int(v)
		if err != nil {
			return nil, fmt.Errorf("invalid value for b, must be INT")
		}
	}
	v := &goastarter.AddPayload{}
	v.A = a
	v.B = b

	return v, nil
}
