// Code generated by goa v3.4.3, DO NOT EDIT.
//
// term_limit HTTP client types
//
// Command:
// $ goa gen goa_starter/design

package client

import (
	termlimit "goa_starter/gen/term_limit"
	termlimitviews "goa_starter/gen/term_limit/views"
)

// GetRequestBody is the type of the "term_limit" service "get" endpoint HTTP
// request body.
type GetRequestBody struct {
	// term_limit „ÅÆID
	ID int `form:"id" json:"id" xml:"id"`
}

// GetResponseBody is the type of the "term_limit" service "get" endpoint HTTP
// response body.
type GetResponseBody struct {
	ID      *uint64 `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
	OfferID *uint64 `form:"offer_id,omitempty" json:"offer_id,omitempty" xml:"offer_id,omitempty"`
	Status  *uint64 `form:"status,omitempty" json:"status,omitempty" xml:"status,omitempty"`
}

// NewGetRequestBody builds the HTTP request body from the payload of the "get"
// endpoint of the "term_limit" service.
func NewGetRequestBody(p *termlimit.GetPayload) *GetRequestBody {
	body := &GetRequestBody{
		ID: p.ID,
	}
	return body
}

// NewGetTermLimitResponseOK builds a "term_limit" service "get" endpoint
// result from a HTTP "OK" response.
func NewGetTermLimitResponseOK(body *GetResponseBody) *termlimitviews.TermLimitResponseView {
	v := &termlimitviews.TermLimitResponseView{
		ID:      body.ID,
		OfferID: body.OfferID,
		Status:  body.Status,
	}

	return v
}
