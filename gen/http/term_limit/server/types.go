// Code generated by goa v3.4.3, DO NOT EDIT.
//
// term_limit HTTP server types
//
// Command:
// $ goa gen goa_starter/design

package server

import (
	termlimit "goa_starter/gen/term_limit"
	termlimitviews "goa_starter/gen/term_limit/views"

	goa "goa.design/goa/v3/pkg"
)

// GetRequestBody is the type of the "term_limit" service "get" endpoint HTTP
// request body.
type GetRequestBody struct {
	// term_limit „ÅÆID
	ID *int `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
}

// GetResponseBody is the type of the "term_limit" service "get" endpoint HTTP
// response body.
type GetResponseBody struct {
	ID      uint64 `form:"id" json:"id" xml:"id"`
	OfferID uint64 `form:"offer_id" json:"offer_id" xml:"offer_id"`
	Status  uint64 `form:"status" json:"status" xml:"status"`
}

// NewGetResponseBody builds the HTTP response body from the result of the
// "get" endpoint of the "term_limit" service.
func NewGetResponseBody(res *termlimitviews.TermLimitResponseView) *GetResponseBody {
	body := &GetResponseBody{
		ID:      *res.ID,
		OfferID: *res.OfferID,
		Status:  *res.Status,
	}
	return body
}

// NewGetPayload builds a term_limit service get endpoint payload.
func NewGetPayload(body *GetRequestBody, muid string, mediaID uint64) *termlimit.GetPayload {
	v := &termlimit.GetPayload{
		ID: *body.ID,
	}
	v.Muid = muid
	v.MediaID = mediaID

	return v
}

// ValidateGetRequestBody runs the validations defined on GetRequestBody
func ValidateGetRequestBody(body *GetRequestBody) (err error) {
	if body.ID == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("id", "body"))
	}
	return
}
